{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhanu\\\\Desktop\\\\Dhanushree_Xurity\\\\frontend\\\\src\\\\components\\\\table.js\";\nimport React from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { Rating } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: \"id\",\n  headerName: \"ID\",\n  width: 80,\n  sortable: false\n}, {\n  field: \"username\",\n  headerName: \"Username\",\n  sortable: false,\n  flex: 1,\n  width: 150\n}, {\n  field: \"Date\",\n  headerName: \"Date of register\",\n  sortable: false,\n  width: 180\n}, {\n  field: \"time\",\n  headerName: \"Time of register\",\n  width: 180\n}];\nconst [search, setSearch] = useState(\"\");\nconst [slots, setSlots] = useState([]);\nuseEffect(() => {\n  const getslots = async () => {\n    try {\n      const res = await axios.get(`https://infolib-backend.onrender.com/slot/slots`);\n      setSlots(res.data.reverse());\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  getslots();\n}, []);\nconst DataTable = ({\n  products\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: products,\n      columns: columns,\n      pageSize: 5,\n      rowsPerPageOptions: [5],\n      disableColumnMenu: true,\n      disableSelectionOnClick: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","DataGrid","Rating","useState","jsxDEV","_jsxDEV","columns","field","headerName","width","sortable","flex","search","setSearch","slots","setSlots","useEffect","getslots","res","axios","get","data","reverse","error","console","log","DataTable","products","style","height","children","rows","pageSize","rowsPerPageOptions","disableColumnMenu","disableSelectionOnClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dhanu/Desktop/Dhanushree_Xurity/frontend/src/components/table.js"],"sourcesContent":["import React from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { Rating } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\nconst columns = [\r\n    {\r\n      field: \"id\",\r\n      headerName: \"ID\",\r\n      width: 80,\r\n      sortable: false,\r\n    },\r\n    {\r\n      field: \"username\",\r\n      headerName: \"Username\",\r\n      sortable: false,\r\n      flex: 1,\r\n      width: 150,\r\n    },\r\n    { field: \"Date\", headerName: \"Date of register\", sortable: false, width: 180 },\r\n    { field: \"time\", headerName: \"Time of register\", width: 180 },\r\n  ];\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const [slots, setSlots] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getslots = async () => {\r\n      try {\r\n        const res = await axios.get(`https://infolib-backend.onrender.com/slot/slots`);\r\n        setSlots(res.data.reverse());\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getslots();\r\n  }, []);\r\n\r\n\r\nconst DataTable = ({ products }) => {\r\n  return (\r\n    <div style={{ height: 400, width: \"100%\" }}>\r\n      <DataGrid\r\n        rows={products}\r\n        columns={columns}\r\n        pageSize={5}\r\n        rowsPerPageOptions={[5]}\r\n        disableColumnMenu\r\n        disableSelectionOnClick\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataTable;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,OAAO,GAAG,CACZ;EACEC,KAAK,EAAE,IAAI;EACXC,UAAU,EAAE,IAAI;EAChBC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEH,KAAK,EAAE,UAAU;EACjBC,UAAU,EAAE,UAAU;EACtBE,QAAQ,EAAE,KAAK;EACfC,IAAI,EAAE,CAAC;EACPF,KAAK,EAAE;AACT,CAAC,EACD;EAAEF,KAAK,EAAE,MAAM;EAAEC,UAAU,EAAE,kBAAkB;EAAEE,QAAQ,EAAE,KAAK;EAAED,KAAK,EAAE;AAAI,CAAC,EAC9E;EAAEF,KAAK,EAAE,MAAM;EAAEC,UAAU,EAAE,kBAAkB;EAAEC,KAAK,EAAE;AAAI,CAAC,CAC9D;AAED,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;AACxC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;AAEtCa,SAAS,CAAC,MAAM;EACd,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,iDAAiD,CAAC;MAC9EL,QAAQ,CAACG,GAAG,CAACG,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;EACDN,QAAQ,CAAC,CAAC;AACZ,CAAC,EAAE,EAAE,CAAC;AAGR,MAAMS,SAAS,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAClC,oBACEtB,OAAA;IAAKuB,KAAK,EAAE;MAAEC,MAAM,EAAE,GAAG;MAAEpB,KAAK,EAAE;IAAO,CAAE;IAAAqB,QAAA,eACzCzB,OAAA,CAACJ,QAAQ;MACP8B,IAAI,EAAEJ,QAAS;MACfrB,OAAO,EAAEA,OAAQ;MACjB0B,QAAQ,EAAE,CAAE;MACZC,kBAAkB,EAAE,CAAC,CAAC,CAAE;MACxBC,iBAAiB;MACjBC,uBAAuB;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAbId,SAAS;AAef,eAAeA,SAAS;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}