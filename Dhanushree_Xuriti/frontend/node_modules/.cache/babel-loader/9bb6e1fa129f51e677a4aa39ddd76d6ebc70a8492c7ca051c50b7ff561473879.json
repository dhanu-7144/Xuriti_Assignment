{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhanu\\\\Desktop\\\\Dhanushree_Xurity\\\\frontend\\\\src\\\\components\\\\table.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: \"id\",\n  headerName: \"ID\",\n  width: 80,\n  sortable: false\n}, {\n  field: \"username\",\n  headerName: \"Username\",\n  sortable: false,\n  flex: 1,\n  width: 150\n}, {\n  field: \"Date\",\n  headerName: \"Date of register\",\n  sortable: false,\n  width: 180\n}, {\n  field: \"time\",\n  headerName: \"Time of register\",\n  width: 180\n}];\nconst DataTable = () => {\n  _s();\n  const [users, setusers] = useState([]);\n  useEffect(() => {\n    const getUsers = async () => {\n      try {\n        const res = await axios.get(`http://localhost:4000/user/getusers`);\n        console.log(res.data); // Log the data to ensure it has the correct structure\n        const usersWithId = res.data.reverse().map((user, index) => ({\n          id: index + 1,\n          ...user,\n          date: new Date(user.date).toLocaleDateString() // Format the date if necessary\n        }));\n        setusers(usersWithId);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 500,\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: users,\n      columns: columns,\n      disableColumnMenu: true,\n      disableSelectionOnClick: true,\n      getRowId: row => row._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(DataTable, \"VuZ0b4acPU2nBjIwXEngF8oWD9w=\");\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","DataGrid","useState","useEffect","axios","jsxDEV","_jsxDEV","columns","field","headerName","width","sortable","flex","DataTable","_s","users","setusers","getUsers","res","get","console","log","data","usersWithId","reverse","map","user","index","id","date","Date","toLocaleDateString","error","style","height","children","rows","disableColumnMenu","disableSelectionOnClick","getRowId","row","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dhanu/Desktop/Dhanushree_Xurity/frontend/src/components/table.js"],"sourcesContent":["import React from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { useState,useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst columns = [\r\n    {\r\n      field: \"id\",\r\n      headerName: \"ID\",\r\n      width: 80,\r\n      sortable: false,\r\n    },\r\n    {\r\n      field: \"username\",\r\n      headerName: \"Username\",\r\n      sortable: false,\r\n      flex: 1,\r\n      width: 150,\r\n    },\r\n    { field: \"Date\", headerName: \"Date of register\", sortable: false, width: 180 },\r\n    { field: \"time\", headerName: \"Time of register\", width: 180 },\r\n  ];\r\n\r\n\r\nconst DataTable = () => {\r\n\r\n    const [users, setusers] = useState([]);    \r\n\r\n    useEffect(() => {\r\n        const getUsers = async () => {\r\n          try {\r\n            const res = await axios.get(`http://localhost:4000/user/getusers`);\r\n            console.log(res.data); // Log the data to ensure it has the correct structure\r\n            const usersWithId = res.data.reverse().map((user, index) => ({\r\n              id: index + 1,\r\n              ...user,\r\n              date: new Date(user.date).toLocaleDateString(), // Format the date if necessary\r\n            }));\r\n            setusers(usersWithId);\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        };\r\n        getUsers();\r\n      }, []);\r\n      \r\n      \r\n\r\n  return (\r\n    <div style={{ height: 500, width: \"100%\" }}>\r\n      <DataGrid\r\n        rows={users}\r\n        columns={columns}\r\n        disableColumnMenu\r\n        disableSelectionOnClick\r\n        getRowId={(row) => row._id}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataTable;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAC1C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAG,CACZ;EACEC,KAAK,EAAE,IAAI;EACXC,UAAU,EAAE,IAAI;EAChBC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE;AACZ,CAAC,EACD;EACEH,KAAK,EAAE,UAAU;EACjBC,UAAU,EAAE,UAAU;EACtBE,QAAQ,EAAE,KAAK;EACfC,IAAI,EAAE,CAAC;EACPF,KAAK,EAAE;AACT,CAAC,EACD;EAAEF,KAAK,EAAE,MAAM;EAAEC,UAAU,EAAE,kBAAkB;EAAEE,QAAQ,EAAE,KAAK;EAAED,KAAK,EAAE;AAAI,CAAC,EAC9E;EAAEF,KAAK,EAAE,MAAM;EAAEC,UAAU,EAAE,kBAAkB;EAAEC,KAAK,EAAE;AAAI,CAAC,CAC9D;AAGH,MAAMG,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,MAAMc,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,qCAAqC,CAAC;QAClEC,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,IAAI,CAAC,CAAC,CAAC;QACvB,MAAMC,WAAW,GAAGL,GAAG,CAACI,IAAI,CAACE,OAAO,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,MAAM;UAC3DC,EAAE,EAAED,KAAK,GAAG,CAAC;UACb,GAAGD,IAAI;UACPG,IAAI,EAAE,IAAIC,IAAI,CAACJ,IAAI,CAACG,IAAI,CAAC,CAACE,kBAAkB,CAAC,CAAC,CAAE;QAClD,CAAC,CAAC,CAAC;QACHf,QAAQ,CAACO,WAAW,CAAC;MACvB,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdZ,OAAO,CAACC,GAAG,CAACW,KAAK,CAAC;MACpB;IACF,CAAC;IACDf,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAIV,oBACEX,OAAA;IAAK2B,KAAK,EAAE;MAAEC,MAAM,EAAE,GAAG;MAAExB,KAAK,EAAE;IAAO,CAAE;IAAAyB,QAAA,eACzC7B,OAAA,CAACL,QAAQ;MACPmC,IAAI,EAAErB,KAAM;MACZR,OAAO,EAAEA,OAAQ;MACjB8B,iBAAiB;MACjBC,uBAAuB;MACvBC,QAAQ,EAAGC,GAAG,IAAKA,GAAG,CAACC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAnCID,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}